import { Injectable } from '@angular/core';
import { Headers, Http } from '@angular/http';
import { Observable }        from 'rxjs/Observable';

import { User } from './user';

import 'rxjs/add/operator/toPromise';
import 'rxjs/add/operator/map'

@Injectable()
export class AuthService {
  private usersUrl = 'api/users';  // URL to web api
  private headers = new Headers({'Content-Type': 'application/json'});


  constructor(private http: Http) { }

  fetchUser(id: string): Observable<any> {
      const url = `${this.usersUrl}/${id}`;
      console.log("=========" + url);
      return this.http.get(url)
    }


  fetchUserold(id: string): Promise<User> {
      const url = `${this.usersUrl}/${id}`;
      console.log("=========" + url);
      return this.http.get(url)
        .toPromise()
        .then(response =>  {
          response.json().data as User
          console.log("......" + JSON.stringify(response.json()));
        })
        .catch(this.handleError);
    }

    private handleError(error: any): Promise<any> {
         console.error('An error occurred', error); // for demo purposes only
         return Promise.reject(error.message || error);
    }

    getUsers(): Observable<any> {
      //return this.http.get(this.usersUrl)
      //       .toPromise()
      //       .then(response => response.json().data as User[])
      //       .catch(this.handleError);
      //return this.http.get(this.usersUrl).map(response => response.json().data as User[]);
      //return this.http.get(this.usersUrl);
      return this.http.get(this.usersUrl).map(response => response);

    }



}
